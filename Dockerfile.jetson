FROM nvcr.io/nvidia/l4t-jetpack:r35.2.1

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility

RUN apt-get update && apt-get install -y \
    git build-essential curl wget python3-pip python3-dev pkg-config \
    && rm -rf /var/lib/apt/lists/*

RUN ln -sf /usr/bin/python3 /usr/bin/python
RUN pip3 install --upgrade pip

# Install newer CMake
# Check https://github.com/Kitware/CMake/releases for the latest ARM64 release
# Example uses CMake 3.22.6. Adjust the version to what you prefer or what you used on x86.
RUN wget -q https://github.com/Kitware/CMake/releases/download/v3.22.6/cmake-3.22.6-linux-aarch64.sh \
    && chmod +x cmake-3.22.6-linux-aarch64.sh \
    && ./cmake-3.22.6-linux-aarch64.sh --prefix=/usr/local --skip-license \
    && rm cmake-3.22.6-linux-aarch64.sh \
    && cmake --version

# Copy Open3D source
COPY . /root/Open3D
WORKDIR /root/Open3D

# Install Python dependencies
RUN pip3 install -r python/requirements.txt -r python/requirements_build.txt

# Build Open3D with CUDA
RUN mkdir build && cd build && \
    cmake -DBUILD_CUDA_MODULE=ON \
          -DBUILD_PYTHON_MODULE=ON \
          -DBUILD_SHARED_LIBS=OFF \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=~/open3d_install \
          .. && \
    make -j$(nproc) && \
    make install-pip-package -j$(nproc)

